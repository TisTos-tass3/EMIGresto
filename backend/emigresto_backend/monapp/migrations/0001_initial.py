<<<<<<< HEAD
<<<<<<< HEAD
# Generated by Django 5.2.1 on 2025-06-14 10:40
=======
# Generated by Django 5.2.1 on 2025-05-31 12:22
>>>>>>> parent of 58a43359 (Changement au front-end avec nouvelles fonctions)
=======
# Generated by Django 5.2.1 on 2025-05-31 12:22
>>>>>>> parent of 58a43359 (Changement au front-end avec nouvelles fonctions)

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('nom', models.CharField(max_length=50)),
                ('prenom', models.CharField(max_length=50)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('role', models.CharField(choices=[('ETUDIANT', 'Étudiant'), ('ADMIN', 'Administrateur'), ('CHEF_SERVICE', 'Chef Service Restaurant'), ('MAGASINIER', 'Magasinier'), ('VENDEUR_TICKETS', 'Vendeur Tickets'), ('RESPONSABLE_GUICHET', 'Responsable Guichet'), ('CUISINIER', 'Cuisinier')], default='ETUDIANT', max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
                'db_table': 'utilisateur',
            },
        ),
        migrations.CreateModel(
            name='Jour',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('nomJour', models.CharField(db_column='nomJour', max_length=10)),
            ],
            options={
                'db_table': 'jour',
            },
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=8)),
                ('mode_paiement', models.CharField(choices=[('CASH', 'Espèces'), ('SOLDE', 'Solde')], max_length=6)),
            ],
            options={
                'db_table': 'paiement',
            },
        ),
        migrations.CreateModel(
            name='Periode',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('nomPeriode', models.CharField(db_column='nomPeriode', max_length=10)),
            ],
            options={
                'db_table': 'periode',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type_ticket', models.CharField(choices=[('PETIT', 'Petit-déjeuner (80 FCFA)'), ('DEJ', 'Déjeuner/DINER (125 FCFA)')], max_length=5)),
                ('prix', models.PositiveIntegerField(editable=False)),
                ('date_vente', models.DateTimeField(default=django.utils.timezone.now)),
                ('qr_code', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'ticket',
                'ordering': ['-date_vente'],
            },
        ),
        migrations.CreateModel(
            name='Administrateur',
            fields=[
                ('utilisateur_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'administrateur',
            },
            bases=('monapp.utilisateur',),
        ),
        migrations.CreateModel(
            name='ChefServiceRestaurant',
            fields=[
                ('utilisateur_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'chefServiceRestaurant',
            },
            bases=('monapp.utilisateur',),
        ),
        migrations.CreateModel(
            name='Etudiant',
            fields=[
                ('utilisateur_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('matricule', models.CharField(max_length=20, unique=True)),
                ('solde', models.DecimalField(decimal_places=2, default=0, help_text='Solde du compte étudiant', max_digits=10)),
                ('sexe', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin')], help_text="Sexe de l'étudiant", max_length=1)),
            ],
            options={
                'verbose_name': 'Étudiant',
                'db_table': 'etudiant',
            },
            bases=('monapp.utilisateur',),
        ),
        migrations.CreateModel(
            name='Magasinier',
            fields=[
                ('utilisateur_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'magasinier',
            },
            bases=('monapp.utilisateur',),
        ),
        migrations.CreateModel(
            name='ResponsableGuichet',
            fields=[
                ('utilisateur_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'responsableGuichet',
            },
            bases=('monapp.utilisateur',),
        ),
        migrations.CreateModel(
            name='VendeurTicket',
            fields=[
                ('utilisateur_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'vendeurTicket',
            },
            bases=('monapp.utilisateur',),
        ),
        migrations.CreateModel(
            name='Authentification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dernier_acces', models.DateTimeField(auto_now=True)),
                ('token', models.CharField(blank=True, max_length=255, null=True)),
                ('utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'authentification',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('date_envoi', models.DateTimeField(auto_now_add=True)),
                ('lu', models.BooleanField(default=False)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notification',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=8)),
                ('paiement', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='monapp.paiement')),
                ('ticket', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='monapp.ticket')),
            ],
            options={
                'db_table': 'transaction',
            },
        ),
        migrations.CreateModel(
            name='RecuTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_emission', models.DateTimeField(auto_now_add=True)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=6)),
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='monapp.transaction')),
            ],
            options={
                'db_table': 'recuTicket',
            },
        ),
        migrations.AddField(
            model_name='ticket',
            name='etudiant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tickets', to='monapp.etudiant'),
        ),
        migrations.CreateModel(
            name='Recharge',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=8)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('moyen', models.CharField(default='Espèces', max_length=20)),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recharges', to='monapp.etudiant')),
            ],
            options={
                'db_table': 'recharge',
                'ordering': ['-date'],
            },
        ),
        migrations.AddField(
            model_name='paiement',
            name='etudiant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monapp.etudiant'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='vendeur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tickets', to='monapp.vendeurticket'),
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('heure', models.TimeField(default=django.utils.timezone.now)),
                ('statut', models.CharField(choices=[('VALIDE', 'Valide'), ('ANNULE', 'Annulée')], default='VALIDE', max_length=10)),
                ('jour', models.ForeignKey(help_text='Jour de la réservation', on_delete=django.db.models.deletion.PROTECT, related_name='reservations', to='monapp.jour')),
                ('periode', models.ForeignKey(help_text='Période (petit-déj, midi, soir)', on_delete=django.db.models.deletion.PROTECT, related_name='reservations', to='monapp.periode')),
                ('etudiant', models.ForeignKey(help_text="L'étudiant qui initie la réservation", on_delete=django.db.models.deletion.CASCADE, related_name='reservations_effectuees', to='monapp.etudiant')),
                ('reservant_pour', models.ForeignKey(blank=True, help_text='Optionnel : matricule du camarade pour qui on réserve', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reservations_recueillies', to='monapp.etudiant')),
            ],
            options={
                'db_table': 'reservation',
                'unique_together': {('reservant_pour', 'jour', 'periode', 'date')},
            },
        ),
    ]
